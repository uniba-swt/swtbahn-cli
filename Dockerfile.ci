FROM ubuntu:20.04 as build
# RUN mkdir -p /app/swtbahn-cli
RUN mkdir /app
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends git

# swtbahn-cli dependencies
RUN apt-get update && apt-get install -y --no-install-recommends make
RUN apt-get update && apt-get install -y --no-install-recommends clang
RUN apt-get update && apt-get install -y --no-install-recommends pkg-config
RUN apt-get update && apt-get install -y --no-install-recommends libglib2.0-dev

# libbidib dependencies
RUN apt-get update && apt-get install -y --no-install-recommends libyaml-dev libcmocka-dev

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends cmake
RUN apt-get install -y ca-certificates

RUN git clone https://github.com/uniba-swt/onion.git
RUN cd onion/;mkdir build;cd build;cmake ..;make onion;make onion_static

RUN git clone https://github.com/uniba-swt/libbidib.git
RUN cd libbidib;mkdir build;cd build;cmake ..;make

RUN apt-get update && apt-get install --yes flex bison make build-essential clang graphviz
ADD forecc.tar /app/forecc/
RUN cd /app/forecc/;make clean;make
ENV FOREC_COMPILER_PATH=/app/forecc/
ENV PATH=$PATH:$FOREC_COMPILER_PATH

RUN apt-get update && apt-get install --yes gcc

# COPY . /app/swtbahn-cli

# docker-compose -f ci.yml build && docker-compose -f ci.yml run build bash

# >>> inside docker:
# cd swtbahn-cli; cd server; mkdir build; cd build; cmake ..; make