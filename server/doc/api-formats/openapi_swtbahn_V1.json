{
    "openapi": "3.0.0",
    "info": {
        "title": "SWTbahn",
        "version": "1.0.0",
        "contact": {},
        "license": {
            "name": "GPL-3.0"
        },
        "description": "SWTbahn server offering an API for interacting with an SWTbahn model railway."
    },
    "paths": {
        "/admin/startup": {
            "post": {
                "summary": "Startup the SWTbahn",
                "description": "Attempts to start up the SWTbahn to get it running; i.e., initialize connection to hardware, parse config files, and so on.",
                "parameters": [],
                "operationId": "admin-startup",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "409": {
                        "description": "SWTbahn is already running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "SWTbahn unable to startup due to internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/admin/shutdown": {
            "post": {
                "summary": "Shutdown the SWTbahn",
                "description": "Attempts to shut down the SWTbahn (if it is running); i.e., close connection to hardware, stop running internal threads, and so on.",
                "parameters": [],
                "operationId": "admin-shutdown",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "security": []
            }
        },
        "/admin/set-track-output": {
            "post": {
                "summary": "Set the track output state",
                "description": "Set the track output state for all track outputs",
                "parameters": [],
                "operationId": "admin-set-track-output",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_state_string"
                            }
                        }
                    },
                    "description": "the state that all track outputs shall be set to"
                },
                "security": []
            }
        },
        "/admin/set-verification-option": {
            "post": {
                "summary": "Set the verification option",
                "description": "Set the verification option to true or false, i.e., enable or disable the verification of train engines when they are uploaded. Note that verification will only work if a verification url to the swtbahn-verifier (or equivalent) server has been set.",
                "parameters": [],
                "operationId": "admin-set-verification-option",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_verification-option_string"
                            }
                        }
                    },
                    "description": "the new value of the verification option (true or false)"
                },
                "security": []
            }
        },
        "/admin/set-verification-url": {
            "post": {
                "summary": "Set the verification url",
                "description": "Set the verification url, i.e., the path for the websocket connection to the verification server for train engines.",
                "parameters": [],
                "operationId": "admin-set-verification-url",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_verification-url_string"
                            }
                        }
                    },
                    "description": "the new value of the verification url (should start with ws://)"
                },
                "security": []
            }
        },
        "/admin/release-train": {
            "post": {
                "summary": "Release a train",
                "description": "Force-release a train that is currently grabbed by someone.",
                "parameters": [],
                "operationId": "admin-release-train",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid train, or train not currently grabbed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_train_string"
                            }
                        }
                    },
                    "description": "the train that shall be released"
                },
                "security": []
            }
        },
        "/admin/set-dcc-train-speed": {
            "post": {
                "summary": "Set the dcc speed of a train",
                "description": "Set the dcc speed of a train, i.e., the speed has to be provided as a whole number in the range [-126, 126]",
                "parameters": [],
                "operationId": "admin-set-dcc-train-speed",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid train, invalid speed, or invalid track output",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_train_speed_trackoutput"
                            }
                        }
                    },
                    "description": "the train whose speed shall be set, the speed, and the track output"
                },
                "security": []
            }
        },
        "/controller/release-route": {
            "post": {
                "summary": "releases a route",
                "description": "releases a route that is currently granted to a train",
                "parameters": [],
                "operationId": "controller-release-route",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_route-id"
                            }
                        }
                    },
                    "description": "route which shall be released."
                },
                "security": []
            }
        },
        "/controller/set-point": {
            "post": {
                "summary": "set the state/aspect of a point",
                "description": "",
                "parameters": [],
                "operationId": "controller-set-point",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_point_state"
                            }
                        }
                    },
                    "description": "point whose state shall be set, and state to set."
                },
                "security": []
            }
        },
        "/controller/set-signal": {
            "post": {
                "summary": "set the state/aspect of a signal",
                "description": "",
                "parameters": [],
                "operationId": "controller-set-signal",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_signal_state"
                            }
                        }
                    },
                    "description": "signal whose state shall be set, and state to set."
                },
                "security": []
            }
        },
        "/controller/set-peripheral": {
            "post": {
                "summary": "set the state/aspect of a peripheral",
                "description": "",
                "parameters": [],
                "operationId": "controller-set-peripheral",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_peripheral_state"
                            }
                        }
                    },
                    "description": "peripheral whose state shall be set, and state to set."
                },
                "security": []
            }
        },
        "/controller/set-interlocker": {
            "post": {
                "summary": "set the interlocker to be used by the SWTbahn",
                "description": "",
                "parameters": [],
                "operationId": "controller-set-interlocker",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter or no more free interlocker instances available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "409": {
                        "description": "Another interlocker is already set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_interlocker"
                            }
                        }
                    },
                    "description": "ID of the interlocker to be used by the SWTbahn."
                },
                "security": []
            }
        },
        "/controller/unset-interlocker": {
            "post": {
                "summary": "unset the interlocker currently used by the SWTbahn",
                "description": "",
                "parameters": [],
                "operationId": "controller-unset-interlocker",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Invalid or missing parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "409": {
                        "description": "no interlocker currently set, or currently set interlocker has a different name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/param_interlocker"
                            }
                        }
                    },
                    "description": "ID of the interlocker currently used by the SWTbahn that shall be unset."
                },
                "security": []
            }
        },
        "/controller/get-interlocker": {
            "get": {
                "summary": "get the ID of the interlocker currently used by the SWTbahn",
                "description": "",
                "parameters": [],
                "operationId": "controller-get-interlocker",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reply_get-interlocker"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "no interlocker currently set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/common_feedback"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed"
                    },
                    "503": {
                        "description": "SWTbahn not running"
                    }
                },
                "security": []
            }
        }
    },
    "security": [],
    "servers": [],
    "components": {
        "links": {},
        "callbacks": {},
        "schemas": {
            "common_feedback": {
                "title": "common_feedback",
                "description": "simple object with feedback message",
                "type": "object",
                "properties": {
                    "msg": {
                        "type": "string",
                        "minLength": 1,
                        "$comment": "msg is not required to always be present, but if it is, its value shall not be empty."
                    }
                }
            },
            "param_train": {
                "title": "param_train",
                "type": "object",
                "properties": {
                    "train": {
                        "description": "string with name of the train",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_verification-url": {
                "title": "param_verification-url",
                "type": "object",
                "properties": {
                    "verification-url": {
                        "description": "verification url string",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_verification-option": {
                "title": "param_verification-option",
                "type": "object",
                "properties": {
                    "verification-option": {
                        "description": "verification option value string (value should be true or false)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_state": {
                "title": "param_state",
                "type": "object",
                "properties": {
                    "state": {
                        "description": "state string",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_route-id": {
                "title": "param_route-id",
                "type": "object",
                "properties": {
                    "route-id": {
                        "description": "string with ID of a route, which is usually a whole number",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_point_state": {
                "title": "param_point_state",
                "type": "object",
                "properties": {
                    "point": {
                        "description": "ID of a point",
                        "type": "string",
                        "minLength": 1
                    },
                    "state": {
                        "description": "desired point state",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_signal_state": {
                "title": "param_signal_state",
                "type": "object",
                "properties": {
                    "signal": {
                        "description": "ID of a signal",
                        "type": "string",
                        "minLength": 1
                    },
                    "state": {
                        "description": "desired signal state",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_peripheral_state": {
                "title": "param_peripheral_state",
                "type": "object",
                "properties": {
                    "peripheral": {
                        "description": "ID of a peripheral",
                        "type": "string",
                        "minLength": 1
                    },
                    "state": {
                        "description": "desired peripheral state",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_interlocker": {
                "title": "param_interlocker",
                "type": "object",
                "properties": {
                    "interlocker": {
                        "description": "string with ID of an interlocker",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "reply_get-interlocker": {
                "title": "reply_get-interlocker",
                "description": "interlocker",
                "type": "object",
                "properties": {
                    "interlocker": {
                        "description": "the ID of the interlocker that is currently set",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_train_engine": {
                "title": "param_train_engine",
                "type": "object",
                "properties": {
                    "train": {
                        "description": "string with name of a train",
                        "type": "string",
                        "minLength": 1
                    },
                    "engine": {
                        "description": "string with name of a (train) engine",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_session-id_grab-id": {
                "title": "param_session-id_grab-id",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "reply_grab-train": {
                "title": "reply_grab-train",
                "type": "object",
                "properties": {
                    "session-id": {
                        "type": "integer",
                        "description": "identifier for the current server session",
                        "minimum": 1
                    },
                    "grab-id": {
                        "type": "integer",
                        "description": "identifier for this grabbing/ownership of a train",
                        "minimum": 0
                    }
                }
            },
            "param_session-id_grab-id_source_destination": {
                "title": "param_session-id_grab-id_source_destination",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "source": {
                        "description": "name of the source signal",
                        "type": "string",
                        "minLength": 1
                    },
                    "destination": {
                        "description": "name of the destination signal",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "reply_request-route": {
                "title": "reply_request-route",
                "type": "object",
                "properties": {
                    "granted-route-id": {
                        "description": "ID of the granted route",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_session-id_grab-id_route-id": {
                "title": "param_session-id_grab-id_route-id",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "route-id": {
                        "description": "ID of the route",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_train_route-id": {
                "title": "param_train_route-id",
                "type": "object",
                "properties": {
                    "train": {
                        "description": "string with name of a train",
                        "type": "string",
                        "minLength": 1
                    },
                    "route-id": {
                        "description": "string with ID of the route that shall be considered for driving direction",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "reply_direction": {
                "title": "reply_direction",
                "type": "object",
                "properties": {
                    "direction": {
                        "type": "string",
                        "pattern": "^(forwards|backwards)$",
                        "description": "direction of train considering its location and route to be driven"
                    }
                }
            },
            "param_session-id_grab-id_route-id_mode": {
                "title": "param_session-id_grab-id_route-id_mode",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "route-id": {
                        "description": "ID of the route",
                        "type": "string",
                        "minLength": 1
                    },
                    "mode": {
                        "type": "string",
                        "pattern": "^(manual|automatic)$",
                        "description": "driving mode for the route, either manual or automatic"
                    }
                }
            },
            "param_session-id_grab-id_speed_track-output": {
                "title": "param_session-id_grab-id_speed_track-output",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "speed": {
                        "description": "string with speed to set the train to [-126,126]",
                        "type": "string",
                        "minLength": 1
                    },
                    "track-output": {
                        "description": "the name of the track output node (usually master)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_train_speed_track-output": {
                "title": "param_train_speed_track-output",
                "type": "object",
                "properties": {
                    "train": {
                        "description": "string with name of the train",
                        "type": "string",
                        "minLength": 1
                    },
                    "speed": {
                        "description": "string with speed to set the train to [-126,126]",
                        "type": "string",
                        "minLength": 1
                    },
                    "track-output": {
                        "description": "the name of the track output node (usually master)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_session-id_grab-id_speed_track-output__for-calibrated-speed": {
                "title": "param_session-id_grab-id_speed_track-output__for-calibrated-speed",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "speed": {
                        "description": "string with speed to set the train to, [-9,9], depending on the calibration levels configured for the grabbed train",
                        "type": "string",
                        "minLength": 1
                    },
                    "track-output": {
                        "description": "the name of the track output node (usually master)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_session-id_grab-id_track-output": {
                "title": "param_session-id_grab-id_track-output",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "track-output": {
                        "description": "the name of the track output node (usually master)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "param_session-id_grab-id_peripheral_state_track-output": {
                "title": "param_session-id_grab-id_peripheral_state_track-output",
                "type": "object",
                "properties": {
                    "session-id": {
                        "description": "session-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "grab-id": {
                        "description": "grab-id",
                        "type": "string",
                        "minLength": 1
                    },
                    "peripheral": {
                        "description": "ID of the train peripheral",
                        "type": "string",
                        "minLength": 1
                    },
                    "state": {
                        "description": "desired peripheral state",
                        "type": "string",
                        "minLength": 1
                    },
                    "track-output": {
                        "description": "the name of the track output node (usually master)",
                        "type": "string",
                        "minLength": 1
                    }
                }
            }
        }
    }
}